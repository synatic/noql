[
  {
    "numberArray": [1, 2, 3, 4]
  },
  {
    "name": "first",
    "leftSide": "one",
    "testId": "bugfix.true-false.case1",
    "dateAchieved": "2023"
  },
  {
    "name": "second",
    "rightSide": "one",
    "testId": "bugfix.true-false.case1"
  },
  {
    "names": ["Max", "Andy"],
    "testId": "bugfix.join-fn.case1"
  },
  {
    "name": "Max",
    "testId": "bugfix.join-fn.case2"
  },
  {
    "name": "Andy",
    "testId": "bugfix.join-fn.case2"
  },
  {
    "clanId": "C3",
    "testId": "bugfix.sort-order"
  },
  {
    "clanId": "C1",
    "testId": "bugfix.sort-order"
  },
  {
    "clanId": "C2",
    "testId": "bugfix.sort-order"
  },
  {
    "clanId": "C2",
    "testId": "bugfix.sort-order"
  },
  {
    "price": 0,
    "testId": "bugfix.coalesce.case1"
  },
  {
    "price": 1,
    "testId": "bugfix.coalesce.case1"
  },
  {
    "price": null,
    "testId": "bugfix.coalesce.case1"
  },
  {
    "testId": "bugfix.coalesce.case1"
  },
  {
    "value": "A",
    "testId": "bugfix.rank.case1"
  },
  {
    "value": "A",
    "testId": "bugfix.rank.case1"
  },
  {
    "value": "B",
    "testId": "bugfix.rank.case1"
  },
  {
    "value": "B",
    "testId": "bugfix.rank.case1"
  },
  {
    "value": "B",
    "testId": "bugfix.rank.case1"
  },
  {
    "value": "C",
    "testId": "bugfix.rank.case1"
  },
  {
    "value": "E",
    "testId": "bugfix.rank.case1"
  },
  {
    "year": 2018,
    "name": "Jack Daniel",
    "amount": 150000,
    "testId": "bugfix.ntile.case1"
  },
  {
    "year": 2018,
    "name": "Jane Johnson",
    "amount": 110000,
    "testId": "bugfix.ntile.case1"
  },
  {
    "year": 2018,
    "name": "John Doe",
    "amount": 120000,
    "testId": "bugfix.ntile.case1"
  },
  {
    "year": 2018,
    "name": "Stephane Heady",
    "amount": 200000,
    "testId": "bugfix.ntile.case1"
  },
  {
    "year": 2018,
    "name": "Yin Yang",
    "amount": 30000,
    "testId": "bugfix.ntile.case1"
  },
  {
    "year": 2019,
    "name": "Jack Daniel",
    "amount": 180000,
    "testId": "bugfix.ntile.case1"
  },
  {
    "year": 2019,
    "name": "Jane Johnson",
    "amount": 130000,
    "testId": "bugfix.ntile.case1"
  },
  {
    "year": 2019,
    "name": "John Doe",
    "amount": 150000,
    "testId": "bugfix.ntile.case1"
  },
  {
    "year": 2019,
    "name": "Stephane Heady",
    "amount": 270000,
    "testId": "bugfix.ntile.case1"
  },
  {
    "year": 2019,
    "name": "Yin Yang",
    "amount": 25000,
    "testId": "bugfix.ntile.case1"
  },
  {
    "value": "A",
    "testId": "bugfix.dense-rank.case1"
  },
  {
    "value": "A",
    "testId": "bugfix.dense-rank.case1"
  },
  {
    "value": "B",
    "testId": "bugfix.dense-rank.case1"
  },
  {
    "value": "C",
    "testId": "bugfix.dense-rank.case1"
  },
  {
    "value": "C",
    "testId": "bugfix.dense-rank.case1"
  },
  {
    "value": "D",
    "testId": "bugfix.dense-rank.case1"
  },
  {
    "value": "E",
    "testId": "bugfix.dense-rank.case1"
  },
  {
    "parameter": "$eq Isn't a \"bug\" `just` $ \\",
    "testId": "bugfix.special-char-parameters.case1"
  },
  {
    "jsonObjValues": {
      "string": "Testing",
      "integer": 1,
      "boolean": true,
      "number": 1.5,
      "nested": {
        "string": "Testing",
        "secondLevel": {
          "string": "Testing"
        }
      },
      "nestedStrArray": ["A", "b"],
      "nestedObjArray": [
        {"string": "Testing", "integer": 1},
        {"string": "", "integer": 0},
        {}
      ],
      "stringOrInt": "asd"
    },
    "stringArray": ["a", "b"],
    "numberArray": [1, 2, 3, 4],
    "jsonArray": [
      {
        "string": "Testing",
        "integer": 1,
        "boolean": true,
        "number": 1.5,
        "nested": {
          "string": "Testing",
          "secondLevel": {
            "string": "Testing"
          }
        }
      },
      {
        "string": "Testing2"
      }
    ],
    "mixedArray": [{"b": 3}, "a", 1, true, [1, 2, 3]],
    "mixedPrimitiveArray": ["a", 1, true],
    "objOrArray": {
      "bob": "string"
    },
    "stringOrObject": {
      "value": true
    },
    "commaTest": {
      "string": "Testing",
      "integer": 1
    },
    "testCategory": "stringify",
    "testId": "bugfix.schema-aware-queries.cast-json-array-to-varchar.case1"
  },
  {
    "jsonObjValues": {
      "string": "",
      "integer": 0,
      "boolean": false,
      "number": 0,
      "stringOrInt": 1
    },
    "stringArray": [],
    "numberArray": [],
    "objOrArray": ["bob", true],
    "mixedPrimitiveArray": [],
    "stringOrObject": "test",
    "commaTest": {
      "string": "Testing"
    },
    "testCategory": "stringify",
    "testId": "bugfix.schema-aware-queries.cast-json-array-to-varchar.case2"
  },
  {
    "jsonObjValues": {
      "string": null,
      "integer": null,
      "boolean": null,
      "number": null,
      "stringOrInt": null
    },
    "stringArray": null,
    "mixedPrimitiveArray": [1, "a", true, "b"],
    "stringOrObject": 12,
    "testCategory": "stringify",
    "testId": "bugfix.schema-aware-queries.cast-json-array-to-varchar.case3"
  },
  {
    "jsonObjValues": {},
    "testCategory": "stringify",
    "testId": "bugfix.schema-aware-queries.cast-json-array-to-varchar.case4"
  },
  {
    "jsonObjValues": {
      "string": "Testing",
      "integer": 1,
      "boolean": true,
      "number": 1.5,
      "stringOrInt": "asd",
      "nested": false
    },
    "testCategory": "stringify",
    "testId": "bugfix.schema-aware-queries.cast-json-array-to-varchar.case5"
  },
  {
    "disbursedAmount": 10,
    "latestQuoteTotalFactor": 2,
    "latestQuoteTerm": 2,
    "type": "New Deal",
    "testId": "bugfix.deeply-nested-divide.case1",
    "disbursedDate": "2022-04-08T00:00:00.000Z"
  }
]
